Conditonal display for logged in/not logged in

redirect after adding pokemon- done

on the teams index - each team is held in a div with the images of the pokemon 
team show page

teams controller needs to populate it's pokemon before passing the context - done
the sprites will be availble to inject in templates with teams.pokemon[i].sprite

(on a show page team.pokemon[i].sprite)

96x96 pixels by default for sprites


conditional logic on the show page - show the 6 pokemon
if there are not six pokemon
show (6-current number of pokemon) boxes


pokemon edit page
update the model to have something to edit - done with nickname
pull in the current information for the pokemon selected
display it in an empty form
submit button will send a PUT request to /???




create - teams, pokemon
read - teams, pokemon(box - pokemon index)
update - editing pokemon records (give pokemon a nickname value, and create the edit page)
Delete - delete team button on Show page, & remove/delete buttons on individual pokemon (for now, remove from database)
             i ended up removing the pokemon from the team, and refactoring the pokemon model to better match the intended structure




nav.ejs - conditional for user logged in, conditionals for different pages
what buttons do we want to show on each page?

index (/teams)

show (/teams/:id)

new (/teams/new)

edit - team #### (/teams/:id/edit)

delete - teams (/teams/:id)



update nav bar - Log In/ User, Box, View Teams


create a /pokemon view (index of all pokemon)
    on this page there will be a button to create new pokemon
    clicking on a pokemon in your box opens that pokemons sh


create a /pokemon/new view (create page)
    text box for inputing the name or number of a pokemon you want to create
    direct you to that pokemon's show/edit page
    /pokemon/:id

 /pokemon/edit   



update /teams/show (/teams/:id) page - use one half of the screen for current pokemon / empty styled divs for those pokemon 
    other half of the page steal the box from mongoose movies performers
    front end JS file for event listeners on each pokemon sprite inside of that box










we create a Box

/pokemon (index view for all user's created pokemon)
/pokemon/new (create view for pokemon model) create individual pokemon can nickname them)

/teams/show - displays the name of the team and the current members
big box of pokemon on the show page select additional team members

adds that pokemon to the team
once you have six pokemon in your team, the box view closes, or grays out, something 

/pokemon/:id/edit - can edit details about one specific pokemon 